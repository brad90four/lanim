{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to \u03bbanim ! If you want to get started, check out the tutorial . If you want to see recipes for common use cases, look at the how-to guides . If you want to ask for help or just hang out, join our Discord server or use GitHub Discussions","title":"Home"},{"location":"#welcome-to-anim","text":"If you want to get started, check out the tutorial . If you want to see recipes for common use cases, look at the how-to guides . If you want to ask for help or just hang out, join our Discord server or use GitHub Discussions","title":"Welcome to \u03bbanim!"},{"location":"howtos/","text":"This is a stub","title":"How-to guides"},{"location":"tutorial/design/","text":"How does Lanim work?","title":"How does Lanim work?"},{"location":"tutorial/design/#how-does-lanim-work","text":"","title":"How does Lanim work?"},{"location":"tutorial/hello/","text":"Hello, \u03bbanim! In this tutorial, we\u2019re going to recreate the lanim.examples.hello animation. 1. Create a stub Create a file called tutorial_hello.py with this content: from lanim.examples.hello import export Then run python -m lanim -o hello.mp4 tutorial_hello in the same directory. This explains how to make lanim animate your module: it needs to export the animation under the export name. Now we\u2019re going to make an 2. Create the greeting from lanim.pil_types import Latex sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) Theis object doesn\u2019t do anything yet \u2014 it\u2019s a simple value, like a number or a string. 3. Make a static animation of the sign from lanim.anim import const_a from lanim.pil_types import Latex sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) export = const_a ( sign ) Now try python -m lanim -o hello.mp4 tutorial_hello and see what happens. This animation is only 1 second long, how do we make it longer? 3. Stretch the animation from lanim.anim import const_a from lanim.pil_types import Latex sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) export = const_a ( sign ) * 5 The animation now lasts for five seconds. 4. Make the sign scale out instead of just sitting there from lanim.pil_graphics import appear from lanim.pil_types import Latex sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) export = appear ( sign ) * 2 5. Create a border around the greeting from lanim.pil_types import Latex , Rect sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) How do we animate both of them? 6. Animate a pair of the greeting and the border from lanim.pil_graphics import appear from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = appear ( pair ) Pair is also an ordinary immutable value, like Latex and Rect . 7. Make the last frame persist for a while: from lanim.anim import const_a from lanim.pil_graphics import appear from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = appear ( pair ) + const_a ( pair ) 8. Make the border appear before the sign 8.1. Make the sign appear inside the border from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = gbackground ( appear ( sign ), [ border ]) + const_a ( pair ) gbackground accepts an animation and a list of things to put in the background. 8.2. Stretch out the border before the greeting animation from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = appear ( border ) + gbackground ( appear ( sign ), [ border ]) + const_a ( pair ) 8.3. Split a complex expression across several lines from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = ( appear ( border ) + gbackground ( appear ( sign ), [ border ]) + const_a ( pair ) ) 9. Move the whole thing down from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground , move_by from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = ( appear ( border ) + gbackground ( appear ( sign ), [ border ]) + const_a ( pair ) + move_by ( pair , dx = 0 , dy = 10 ) ) The animation is doing the action we wanted it to do, but it\u2019s not pretty. Let\u2019s fix that. 10. Add easings An easing function allows you to change the \u201cshape\u201d of the change. Animation Here you can see that The linear easing moves at a steady pace The in-out easing has a gentle start and end The sled easing starts out slow and then accelerates Formulas An easing is a function from [0; 1] to [0; 1] . You can see their graphs in action on Desmos Code (advanced) This should mostly be understandable, but has a lot of stuff going on (you can animate numbers? WTF?) from lanim.anim import Animation , const_a from lanim.pil_types import Align , Group , Latex , Rect , Pair , Triangle from lanim.easings import linear , in_out , sled def slider ( x1 : float , x2 : float , t : float ): slider_xpos = x1 * ( 1 - t ) + x2 * t bar = Rect ( x = ( x1 + x2 ) / 2 , y = 0 , width = x2 - x1 , height = 0.05 , line_width = 1.5 ) pointer = Triangle ( x = slider_xpos , y =- 0.3 , dx1 =- 0.3 , dy1 =- 0.2 , dx2 =+ 0.3 , dy2 =- 0.2 , dx3 = 0 , dy3 =+ 0.3 ) return Pair ( bar , pointer ) def slider_row ( label : str , t : float ): latex = Latex ( x =- 0.5 , y = 0 , source = label , align = Align . RC ) slider_ = slider ( 0.5 , 5 , t ) . moved ( dx = 0 , dy = 0.25 ) return Pair ( latex , slider_ ) def all_rows ( t : float ): linear_row = slider_row ( r \"\\texttt {linear} :\" , linear ( t )) . moved ( dx = 0 , dy =- 2.5 ) in_out_row = slider_row ( r \"\\texttt{in\\_out}:\" , in_out ( t )) sled_row = slider_row ( r \"\\texttt {sled} :\" , sled ( t )) . moved ( dx = 0 , dy = 2.5 ) return Group ([ linear_row , in_out_row , sled_row ]) zero = const_a ( 0.0 ) one = const_a ( 1.0 ) rise = Animation ( 1 , lambda t : t ) fall = Animation ( 1 , lambda t : - t ) timing = zero * 2 + rise * 3 + one * 2 + fall * 3 + zero * 0.5 + rise + one + fall + zero * 2 export = timing . map ( all_rows ) Formulas: linear_formula = r \"$linear(t) = t$\" in_out_formula = r \"\"\" \\begin {equation} in\\_out(t) = \\begin {cases} 4 t^3 & \\text{ if } t < \\frac {1}{2} \\\\ 1 - 4(1 - t)^3 & \\text {otherwise} \\end {cases} \\end {equation} \"\"\" sled_formula = r \"$ sled(t) = \\left( \\dfrac{\\ln(1 + t)}{\\ln 2} \\right) ^ \\text{\\large{$\\pi$}}$\" export = Group ([ Latex ( - 7 , - 2.8 , linear_formula , align = Align . LC ) . scaled ( 0.5 ), Latex ( - 7 , 0.0 , in_out_formula , align = Align . LC ) . scaled ( 0.5 ), Latex ( - 7 , + 2.8 , sled_formula , align = Align . LC ) . scaled ( 0.5 ), ]) from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground , move_by from lanim.pil_types import Latex , Rect , Pair from lanim.easings import in_out , sled sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = ( appear ( border ) + gbackground ( appear ( sign ), [ border ]) . ease ( in_out ) + const_a ( pair ) + move_by ( pair , dx = 0 , dy = 10 ) . ease ( sled ) ) 11. Adjust durations Timing is crucial. It\u2019s like the accents and intonation in speech. Let\u2019s spice our animation up by tweaking some of the durations. from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground , move_by from lanim.pil_types import Latex , Rect , Pair from lanim.easings import in_out , sled sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = ( appear ( border ) * 0.5 + gbackground ( appear ( sign ), [ border ]) . ease ( in_out ) + const_a ( pair ) * 0.25 + move_by ( pair , dx = 0 , dy = 10 ) . ease ( sled ) ) Recap In this tutorial, you\u2019ve learned how to: Export a simple animation from a Python module Create graphical objects, namely Latex , Rect and Pair Animate still frames, as well as scale out and move objects Change the duration of animations Put animations in sequence Use easings to make transitions more interesting","title":"Hello, \u03bbanim!"},{"location":"tutorial/hello/#hello-anim","text":"In this tutorial, we\u2019re going to recreate the lanim.examples.hello animation.","title":"Hello, \u03bbanim!"},{"location":"tutorial/hello/#1-create-a-stub","text":"Create a file called tutorial_hello.py with this content: from lanim.examples.hello import export Then run python -m lanim -o hello.mp4 tutorial_hello in the same directory. This explains how to make lanim animate your module: it needs to export the animation under the export name. Now we\u2019re going to make an","title":"1. Create a stub"},{"location":"tutorial/hello/#2-create-the-greeting","text":"from lanim.pil_types import Latex sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) Theis object doesn\u2019t do anything yet \u2014 it\u2019s a simple value, like a number or a string.","title":"2. Create the greeting"},{"location":"tutorial/hello/#3-make-a-static-animation-of-the-sign","text":"from lanim.anim import const_a from lanim.pil_types import Latex sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) export = const_a ( sign ) Now try python -m lanim -o hello.mp4 tutorial_hello and see what happens. This animation is only 1 second long, how do we make it longer?","title":"3. Make a static animation of the sign"},{"location":"tutorial/hello/#3-stretch-the-animation","text":"from lanim.anim import const_a from lanim.pil_types import Latex sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) export = const_a ( sign ) * 5 The animation now lasts for five seconds.","title":"3. Stretch the animation"},{"location":"tutorial/hello/#4-make-the-sign-scale-out-instead-of-just-sitting-there","text":"from lanim.pil_graphics import appear from lanim.pil_types import Latex sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) export = appear ( sign ) * 2","title":"4. Make the sign scale out instead of just sitting there"},{"location":"tutorial/hello/#5-create-a-border-around-the-greeting","text":"from lanim.pil_types import Latex , Rect sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) How do we animate both of them?","title":"5. Create a border around the greeting"},{"location":"tutorial/hello/#6-animate-a-pair-of-the-greeting-and-the-border","text":"from lanim.pil_graphics import appear from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = appear ( pair ) Pair is also an ordinary immutable value, like Latex and Rect .","title":"6. Animate a pair of the greeting and the border"},{"location":"tutorial/hello/#7-make-the-last-frame-persist-for-a-while","text":"from lanim.anim import const_a from lanim.pil_graphics import appear from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = appear ( pair ) + const_a ( pair )","title":"7. Make the last frame persist for a while:"},{"location":"tutorial/hello/#8-make-the-border-appear-before-the-sign","text":"","title":"8. Make the border appear before the sign"},{"location":"tutorial/hello/#81-make-the-sign-appear-inside-the-border","text":"from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = gbackground ( appear ( sign ), [ border ]) + const_a ( pair ) gbackground accepts an animation and a list of things to put in the background.","title":"8.1. Make the sign appear inside the border"},{"location":"tutorial/hello/#82-stretch-out-the-border-before-the-greeting-animation","text":"from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = appear ( border ) + gbackground ( appear ( sign ), [ border ]) + const_a ( pair )","title":"8.2. Stretch out the border before the greeting animation"},{"location":"tutorial/hello/#83-split-a-complex-expression-across-several-lines","text":"from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = ( appear ( border ) + gbackground ( appear ( sign ), [ border ]) + const_a ( pair ) )","title":"8.3. Split a complex expression across several lines"},{"location":"tutorial/hello/#9-move-the-whole-thing-down","text":"from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground , move_by from lanim.pil_types import Latex , Rect , Pair sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = ( appear ( border ) + gbackground ( appear ( sign ), [ border ]) + const_a ( pair ) + move_by ( pair , dx = 0 , dy = 10 ) ) The animation is doing the action we wanted it to do, but it\u2019s not pretty. Let\u2019s fix that.","title":"9. Move the whole thing down"},{"location":"tutorial/hello/#10-add-easings","text":"An easing function allows you to change the \u201cshape\u201d of the change. Animation Here you can see that The linear easing moves at a steady pace The in-out easing has a gentle start and end The sled easing starts out slow and then accelerates Formulas An easing is a function from [0; 1] to [0; 1] . You can see their graphs in action on Desmos Code (advanced) This should mostly be understandable, but has a lot of stuff going on (you can animate numbers? WTF?) from lanim.anim import Animation , const_a from lanim.pil_types import Align , Group , Latex , Rect , Pair , Triangle from lanim.easings import linear , in_out , sled def slider ( x1 : float , x2 : float , t : float ): slider_xpos = x1 * ( 1 - t ) + x2 * t bar = Rect ( x = ( x1 + x2 ) / 2 , y = 0 , width = x2 - x1 , height = 0.05 , line_width = 1.5 ) pointer = Triangle ( x = slider_xpos , y =- 0.3 , dx1 =- 0.3 , dy1 =- 0.2 , dx2 =+ 0.3 , dy2 =- 0.2 , dx3 = 0 , dy3 =+ 0.3 ) return Pair ( bar , pointer ) def slider_row ( label : str , t : float ): latex = Latex ( x =- 0.5 , y = 0 , source = label , align = Align . RC ) slider_ = slider ( 0.5 , 5 , t ) . moved ( dx = 0 , dy = 0.25 ) return Pair ( latex , slider_ ) def all_rows ( t : float ): linear_row = slider_row ( r \"\\texttt {linear} :\" , linear ( t )) . moved ( dx = 0 , dy =- 2.5 ) in_out_row = slider_row ( r \"\\texttt{in\\_out}:\" , in_out ( t )) sled_row = slider_row ( r \"\\texttt {sled} :\" , sled ( t )) . moved ( dx = 0 , dy = 2.5 ) return Group ([ linear_row , in_out_row , sled_row ]) zero = const_a ( 0.0 ) one = const_a ( 1.0 ) rise = Animation ( 1 , lambda t : t ) fall = Animation ( 1 , lambda t : - t ) timing = zero * 2 + rise * 3 + one * 2 + fall * 3 + zero * 0.5 + rise + one + fall + zero * 2 export = timing . map ( all_rows ) Formulas: linear_formula = r \"$linear(t) = t$\" in_out_formula = r \"\"\" \\begin {equation} in\\_out(t) = \\begin {cases} 4 t^3 & \\text{ if } t < \\frac {1}{2} \\\\ 1 - 4(1 - t)^3 & \\text {otherwise} \\end {cases} \\end {equation} \"\"\" sled_formula = r \"$ sled(t) = \\left( \\dfrac{\\ln(1 + t)}{\\ln 2} \\right) ^ \\text{\\large{$\\pi$}}$\" export = Group ([ Latex ( - 7 , - 2.8 , linear_formula , align = Align . LC ) . scaled ( 0.5 ), Latex ( - 7 , 0.0 , in_out_formula , align = Align . LC ) . scaled ( 0.5 ), Latex ( - 7 , + 2.8 , sled_formula , align = Align . LC ) . scaled ( 0.5 ), ]) from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground , move_by from lanim.pil_types import Latex , Rect , Pair from lanim.easings import in_out , sled sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = ( appear ( border ) + gbackground ( appear ( sign ), [ border ]) . ease ( in_out ) + const_a ( pair ) + move_by ( pair , dx = 0 , dy = 10 ) . ease ( sled ) )","title":"10. Add easings"},{"location":"tutorial/hello/#11-adjust-durations","text":"Timing is crucial. It\u2019s like the accents and intonation in speech. Let\u2019s spice our animation up by tweaking some of the durations. from lanim.anim import const_a from lanim.pil_graphics import appear , gbackground , move_by from lanim.pil_types import Latex , Rect , Pair from lanim.easings import in_out , sled sign = Latex ( x = 0 , y = 0 , source = r \"Hello, $\\lambda$anim!\" ) border = Rect ( x = 0 , y = 0 , width = sign . width () + 1 , height = sign . height () + 1 ) pair = Pair ( sign , border ) export = ( appear ( border ) * 0.5 + gbackground ( appear ( sign ), [ border ]) . ease ( in_out ) + const_a ( pair ) * 0.25 + move_by ( pair , dx = 0 , dy = 10 ) . ease ( sled ) )","title":"11. Adjust durations"},{"location":"tutorial/hello/#recap","text":"In this tutorial, you\u2019ve learned how to: Export a simple animation from a Python module Create graphical objects, namely Latex , Rect and Pair Animate still frames, as well as scale out and move objects Change the duration of animations Put animations in sequence Use easings to make transitions more interesting","title":"Recap"},{"location":"tutorial/installation/","text":"Installing lanim External dependencies lanim requires some external programs to function. FFmpeg FFmpeg is used to create images from You should find instructions for installing it on the official website . LaTeX LaTeX is the engine behind text and equations. Besides LaTeX itself, you\u2019ll need three packages: standalone , amsmath and amssymb . The easiest way to go is to download a package with many common packages. Ubuntu: sudo apt-get install texlive-latex-extra Arch: pamac install texlive-latexextra Windows & Mac: Download MikTeX here: https://miktex.org/download (If you have a better way of doing this on Windows and Mac, please tell me!) Python You need Python 3.9 or higher to use lanim . Simply install the lanim package using pip . Verify the installation To make sure you installed lanim correctly, render the smoke test animation. python -m lanim -o smoke_test.mp4 lanim.examples.hello (substitute python for the right executable on your system) After running that, you should have a video called smoke_test.mp4 in your current folder. The default settings are: --width 1280 --height 720 --fps 30 . Let\u2019s try better ones: python -m lanim -w 1920 -h 1080 --fps 60 -o smoke_test.mp4 lanim.examples.hello Performance To see how fast animations will render on your machine, render the showcase animation. It\u2019s about a minute long. python -m lanim -o showcase.mp4 lanim.examples.showcase Then render the animation again to see how the cache speeds up the rendering.","title":"Installation"},{"location":"tutorial/installation/#installing-lanim","text":"","title":"Installing lanim"},{"location":"tutorial/installation/#external-dependencies","text":"lanim requires some external programs to function.","title":"External dependencies"},{"location":"tutorial/installation/#ffmpeg","text":"FFmpeg is used to create images from You should find instructions for installing it on the official website .","title":"FFmpeg"},{"location":"tutorial/installation/#latex","text":"LaTeX is the engine behind text and equations. Besides LaTeX itself, you\u2019ll need three packages: standalone , amsmath and amssymb . The easiest way to go is to download a package with many common packages. Ubuntu: sudo apt-get install texlive-latex-extra Arch: pamac install texlive-latexextra Windows & Mac: Download MikTeX here: https://miktex.org/download (If you have a better way of doing this on Windows and Mac, please tell me!)","title":"LaTeX"},{"location":"tutorial/installation/#python","text":"You need Python 3.9 or higher to use lanim . Simply install the lanim package using pip .","title":"Python"},{"location":"tutorial/installation/#verify-the-installation","text":"To make sure you installed lanim correctly, render the smoke test animation. python -m lanim -o smoke_test.mp4 lanim.examples.hello (substitute python for the right executable on your system) After running that, you should have a video called smoke_test.mp4 in your current folder. The default settings are: --width 1280 --height 720 --fps 30 . Let\u2019s try better ones: python -m lanim -w 1920 -h 1080 --fps 60 -o smoke_test.mp4 lanim.examples.hello","title":"Verify the installation"},{"location":"tutorial/installation/#performance","text":"To see how fast animations will render on your machine, render the showcase animation. It\u2019s about a minute long. python -m lanim -o showcase.mp4 lanim.examples.showcase Then render the animation again to see how the cache speeds up the rendering.","title":"Performance"}]}